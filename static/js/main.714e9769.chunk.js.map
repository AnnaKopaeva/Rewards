{"version":3,"sources":["constants/index.ts","materialTheme.ts","helpers/callAPI.ts","config.ts","store/users/actions.ts","store/profile/reducers.ts","store/users/reducers.ts","mockedData/rewards.ts","store/rewards/actions.ts","store/rewards/reducers.ts","mockedData/myRewards.ts","store/myRewards/actions.ts","store/myRewards/reducers.ts","store/rootReducer.ts","store/index.tsx","components/TabComponent/TabButtons.styles.ts","components/TabComponent/TabButtons.tsx","components/TabComponent/Tabs.tsx","components/TabComponent/Tab.tsx","store/profile/selectors.ts","store/rewards/selectors.ts","store/myRewards/selectors.ts","components/Avatar/Avatar.styles.ts","components/Avatar/index.tsx","containers/ListRewards/ListRewards.styles.ts","containers/ListRewards/ListRewardsSkeleton.tsx","components/PanelEmpty/PanelEmpty.styles.ts","components/PanelEmpty/index.tsx","containers/ListRewards/ListRewardsBox.tsx","containers/ListRewards/index.tsx","containers/Feed/Feed.styles.ts","components/Modal/Modal.styles.ts","components/Modal/index.tsx","components/Autocomplete/index.tsx","containers/RewardModal/validation.ts","store/users/selectors.ts","containers/RewardModal/useRewardModal.ts","containers/RewardModal/RewardModal.styles.ts","containers/RewardModal/index.tsx","hooks/useToggleModal.ts","containers/Feed/index.tsx","components/Money/Money.styles.ts","components/Money/index.tsx","containers/Profile/Profile.styles.ts","containers/Profile/index.tsx","containers/Header/Header.styles.ts","containers/Header/index.tsx","components/Preloader/Preloader.styles.ts","components/Preloader/index.tsx","HOCs/withLoading.tsx","components/Layout/Layout.styles.ts","components/Layout/index.tsx","components/Wrapper/index.tsx","components/ErrorBoundary/ErrorBoundary.styles.ts","components/ErrorBoundary/index.tsx","App.tsx","index.tsx"],"names":["SIZE","CURRENCY","colors","mainTheme","createTheme","palette","primary","main","contrastText","grey","A200","A400","typography","fontFamily","join","callAPI","a","url","method","data","Axios","result","baseApiUrl","fetchUser","createAsyncThunk","config","response","profileSlice","createSlice","name","initialState","isLoaded","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","payload","length","rejected","userSlice","loading","rewards","id","user","userBy","rewardCount","rewardCurrency","time","message","fetchRewards","rewardsSlice","createReward","action","actions","myRewards","fetchRewardsByUser","myRewardsSlice","createMyReward","reducer","combineReducers","profile","profileReducer","users","usersReducer","rewardsReducer","myRewardsReducer","store","configureStore","middleware","getDefaultMiddleware","styles","tabs","borderBottom","theme","tab","fontSize","fontWeight","padding","textTransform","borderRadius","color","activeTab","TabButtons","tabsList","changeTab","Box","sx","map","Button","type","onClick","Tabs","content","children","React","props","label","setActiveTab","child","push","Tab","selectUsers","selectProfileData","createSelector","selectProfileLoaded","selectRewards","selectAllRewards","selectRewardsLoading","selectTotalGiveRewards","giveRewards","filter","el","reduce","total","selectMyRewards","selectMyRewardsData","selectTotalMyRewards","size","avatar","bgcolor","s","width","height","icon","AvatarComponent","Avatar","Person","display","flexDirection","maxHeight","overflowY","rewardItem","mt","rewardDetails","pl","rewardTime","rewardMessage","ListRewardsSkeleton","item","Skeleton","variant","Typography","panel","textAlign","PanelEmpty","title","gutterBottom","component","ListRewardsBox","dayjs","extend","relativeTimePlugin","reward","unix","fromNow","ListRewards","isLoading","useSelector","Grid","container","wrap","feed","position","addBtn","minWidth","top","right","border","boxShadow","modal","left","transform","p","ModalComponent","isOpen","onClose","Modal","open","FormikAutocomplete","options","form","field","textFieldProps","setTouched","setFieldValue","Autocomplete","fullWidth","getOptionLabel","option","onChange","_","value","onBlur","renderInput","inputProps","TextField","margin","InputLabelProps","shrink","InputProps","placeholder","MAX_ERROR_MESSAGE","RewardSchema","Yup","shape","required","nullable","max","selectUsersData","useRewardModal","dispatch","useDispatch","initialReward","Date","now","onSubmit","values","alignItems","btn","RewardModal","initialValues","validationSchema","touched","errors","handleChange","handleSubmit","helperText","Boolean","multiline","rows","useToggleModal","setOpen","handleOpenModal","handleCloseModal","Feed","allRewards","useEffect","Add","count","Money","currency","dollar","mr","minHeight","Profile","m","header","details","block","Header","box","justifyContent","Preloader","CircularProgress","withLoading","Component","this","layout","maxWidth","Wrapper","wrapper","ErrorBoundary","hasError","errorInfo","console","App","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.714e9769.chunk.js","sourcesContent":["export enum SIZE {\n  s = \"s\",\n  m = \"m\",\n}\n\nexport enum CURRENCY {\n  dollar = \"$\",\n}\n","import { createTheme } from \"@mui/material/styles\";\n\nconst colors = {\n  white: \"#FFF\",\n  purple: \"#6259F0\",\n  grey: \"#E0E5EC\",\n  darkGrey: \"#A1ABB8\",\n};\n\nexport const mainTheme = createTheme({\n  palette: {\n    primary: {\n      main: colors.purple,\n      contrastText: colors.white,\n    },\n    grey: {\n      A200: colors.grey,\n      A400: colors.darkGrey,\n    },\n  },\n  typography: {\n    fontFamily: [\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n  },\n});\n","import Axios, { Method } from \"axios\";\nimport { ErrorEntity } from \"../interfaces/ErrorEntity\";\n\ninterface ApiProps<T = any> {\n  url?: string;\n  method?: Method;\n  data?: T;\n}\n\n/**\n * call to api\n * @async\n * @method\n * @param {String} url - API url\n * @param {Method} method - API methods\n * @param {any} data - data\n * @returns result of call to API\n * @throws { ErrorEntity } When API return error.\n */\nconst callAPI = async ({ url, method, data }: ApiProps) => {\n  const result = await Axios({\n    url,\n    method,\n    data,\n  });\n  return result;\n};\n\nexport default callAPI;\n","const dev = {\n  baseApiUrl: \"https://jsonplaceholder.typicode.com/users\",\n};\n\nexport default {\n  ...dev,\n};\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport callAPI from \"../../helpers/callAPI\";\nimport config from \"../../config\";\n\nimport { UserEntity } from \"../../interfaces/UserEntity\";\n\nexport const fetchUser = createAsyncThunk<UserEntity[]>(\"users/fetch\", async () => {\n  const response = await callAPI({ url: config.baseApiUrl });\n  return response.data;\n});\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { fetchUser } from \"../users/actions\";\n\nimport { UserEntity } from \"../../interfaces/UserEntity\";\nimport { ErrorEntity } from \"../../interfaces/ErrorEntity\";\n\nexport interface ProfileStore {\n  data: UserEntity;\n  isLoaded: boolean;\n  error: ErrorEntity;\n}\n\nconst initialState: ProfileStore = {\n  data: null,\n  isLoaded: false,\n  error: null,\n};\n\nconst profileSlice = createSlice({\n  name: \"profile\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchUser.pending, (state) => {\n      state.isLoaded = false;\n    });\n    builder.addCase(fetchUser.fulfilled, (state, { payload }) => {\n      state.isLoaded = true;\n      state.data = payload.length ? payload[0] : null;\n    });\n    builder.addCase(fetchUser.rejected, (state, { payload }) => {\n      state.error = payload;\n    });\n  },\n});\n\nexport default profileSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { fetchUser } from \"./actions\";\n\nimport { UserEntity } from \"../../interfaces/UserEntity\";\nimport { ErrorEntity } from \"../../interfaces/ErrorEntity\";\n\nexport interface UsersStore {\n  data: UserEntity[];\n  loading: boolean;\n  error: ErrorEntity;\n}\n\nconst initialState: UsersStore = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nconst userSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchUser.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchUser.fulfilled, (state, { payload }) => {\n      state.loading = false;\n      state.data = payload;\n    });\n    builder.addCase(fetchUser.rejected, (state) => {\n      state.loading = false;\n    });\n  },\n});\n\nexport default userSlice.reducer;\n","import { RewardEntity } from \"../interfaces/RewardEntity\";\n\nconst rewards: RewardEntity[] = [\n  {\n    id: 1,\n    user: {\n      id: 4,\n      name: \"Patricia Lebsack\",\n    },\n    userBy: {\n      id: 2,\n      name: \"Ervin Howell\",\n    },\n    rewardCount: 100,\n    rewardCurrency: \"$\",\n    time: 1635348000,\n    message: \"Big thanks for your help in helping on the outage today!!!\",\n  },\n  {\n    id: 2,\n    user: {\n      id: 3,\n      name: \"Clementine Bauch\",\n    },\n    userBy: {\n      id: 4,\n      name: \"Patricia Lebsack\",\n    },\n    rewardCount: 150,\n    rewardCurrency: \"$\",\n    time: 1635345010,\n    message:\n      \"Thanks for your help in creating the product overview deck. Your help to show cases those scenarios really helped in closing the loop on the story.\",\n  },\n  {\n    id: 3,\n    user: {\n      id: 1,\n      name: \"Leanne Graham\",\n    },\n    userBy: {\n      id: 2,\n      name: \"Ervin Howell\",\n    },\n    rewardCount: 100,\n    rewardCurrency: \"$\",\n    time: 1635348000,\n    message: \"Big thanks for your help in helping on the outage today!!!\",\n  },\n  {\n    id: 4,\n    user: {\n      id: 2,\n      name: \"Ervin Howell\",\n    },\n    userBy: {\n      id: 4,\n      name: \"Patricia Lebsack\",\n    },\n    rewardCount: 150,\n    rewardCurrency: \"$\",\n    time: 1635345010,\n    message: \"Thanks for your help in creating the product overview deck. \",\n  },\n];\n\nexport default rewards;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { RewardEntity } from \"../../interfaces/RewardEntity\";\n\nimport rewards from \"../../mockedData/rewards\";\n\nconst FETCH_REWARDS = \"rewards/fetch\";\n\nexport const fetchRewards = createAsyncThunk<RewardEntity[]>(FETCH_REWARDS, () => rewards);\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { ErrorEntity } from \"../../interfaces/ErrorEntity\";\nimport { RewardEntity } from \"../../interfaces/RewardEntity\";\n\nimport { fetchRewards } from \"./actions\";\n\nexport interface RewardsStore {\n  data: RewardEntity[];\n  loading: boolean;\n  error: ErrorEntity;\n}\n\nconst initialState: RewardsStore = {\n  data: [],\n  loading: true,\n  error: null,\n};\n\nconst rewardsSlice = createSlice({\n  name: \"rewards\",\n  initialState,\n  reducers: {\n    createReward: (state: RewardsStore, action: { payload: RewardEntity }) => {\n      state.data = [...state.data, action.payload];\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchRewards.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchRewards.fulfilled, (state, { payload }) => {\n      state.loading = false;\n      state.data = payload;\n    });\n    builder.addCase(fetchRewards.rejected, (state) => {\n      state.loading = false;\n    });\n  },\n});\n\nexport const { createReward } = rewardsSlice.actions;\n\nexport default rewardsSlice.reducer;\n","import { RewardEntity } from \"../interfaces/RewardEntity\";\n\nconst myRewards: RewardEntity[] = [\n  {\n    id: 1,\n    user: {\n      id: 1,\n      name: \"Leanne Graham\",\n    },\n    userBy: {\n      id: 4,\n      name: \"Patricia Lebsack\",\n    },\n    rewardCount: 40,\n    rewardCurrency: \"$\",\n    time: 1635348000,\n    message: \"Big thanks for your work today.\",\n  },\n  {\n    id: 2,\n    user: {\n      id: 1,\n      name: \"Leanne Graham\",\n    },\n    userBy: {\n      id: 2,\n      name: \"Ervin Howell\",\n    },\n    rewardCount: 80,\n    rewardCurrency: \"$\",\n    time: 1635345010,\n    message: \"Thanks for your help in creating the product overview deck.\",\n  },\n  {\n    id: 3,\n    user: {\n      id: 1,\n      name: \"Leanne Graham\",\n    },\n    userBy: {\n      id: 4,\n      name: \"Patricia Lebsack\",\n    },\n    rewardCount: 70,\n    rewardCurrency: \"$\",\n    time: 1635348000,\n    message: \"Big thanks for your work today.\",\n  },\n];\n\nexport default myRewards;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { RewardEntity } from \"../../interfaces/RewardEntity\";\n\nimport myRewards from \"../../mockedData/myRewards\";\n\nconst FETCH_REWARDS_BY_USER = \"rewards/fetchByUser\";\n\nexport const fetchRewardsByUser = createAsyncThunk<RewardEntity[], number>(\n  FETCH_REWARDS_BY_USER,\n  (id) => myRewards\n);\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { ErrorEntity } from \"../../interfaces/ErrorEntity\";\nimport { RewardEntity } from \"../../interfaces/RewardEntity\";\n\nimport { fetchRewardsByUser } from \"./actions\";\n\nexport interface MyRewardsStore {\n  data: RewardEntity[];\n  loading: boolean;\n  error: ErrorEntity;\n}\n\nconst initialState: MyRewardsStore = {\n  data: [],\n  loading: true,\n  error: null,\n};\n\nconst myRewardsSlice = createSlice({\n  name: \"rewards\",\n  initialState,\n  reducers: {\n    createMyReward: (state: MyRewardsStore, action: { payload: RewardEntity }) => {\n      state.data = [...state.data, action.payload];\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchRewardsByUser.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchRewardsByUser.fulfilled, (state, { payload }) => {\n      state.loading = false;\n      state.data = payload;\n    });\n    builder.addCase(fetchRewardsByUser.rejected, (state) => {\n      state.loading = false;\n    });\n  },\n});\n\nexport const { createMyReward } = myRewardsSlice.actions;\n\nexport default myRewardsSlice.reducer;\n","import { combineReducers } from \"@reduxjs/toolkit\";\n\nimport profileReducer, { ProfileStore } from \"./profile/reducers\";\nimport usersReducer, { UsersStore } from \"./users/reducers\";\nimport rewardsReducer, { RewardsStore } from \"./rewards/reducers\";\nimport myRewardsReducer, { MyRewardsStore } from \"./myRewards/reducers\";\n\nexport interface AppState {\n  profile: ProfileStore;\n  users: UsersStore;\n  rewards: RewardsStore;\n  myRewards: MyRewardsStore;\n}\n\nconst reducer = combineReducers<AppState>({\n  profile: profileReducer,\n  users: usersReducer,\n  rewards: rewardsReducer,\n  myRewards: myRewardsReducer,\n});\n\nexport default reducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\nimport reducer from \"./rootReducer\";\n\nconst store = configureStore({\n  reducer,\n  middleware: [...getDefaultMiddleware()],\n});\n\nexport default store;\n","import { Theme } from \"@mui/material\";\n\nconst styles = {\n  tabs: {\n    borderBottom: (theme: Theme) => `1px solid ${theme.palette.grey.A400}`,\n  },\n  tab: {\n    fontSize: \"1.2rem\",\n    fontWeight: 400,\n    padding: \"5px 20px\",\n    borderBottom: \"2px solid transparent\",\n    textTransform: \"capitalize\",\n    borderRadius: 0,\n    color: \"grey.900\",\n  },\n  activeTab: {\n    borderBottom: (theme: Theme) => `2px solid ${theme.palette.primary.main}`,\n    color: \"primary.main\",\n  },\n} as const;\n\nexport default styles;\n","import * as React from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\n\nimport styles from \"./TabButtons.styles\";\n\ninterface TabButtonsProps {\n  tabsList: string[];\n  activeTab: string;\n  changeTab(tab: string): void;\n}\n\nconst TabButtons: React.FC<TabButtonsProps> = ({ tabsList, changeTab, activeTab }) => (\n  <Box sx={styles.tabs}>\n    {tabsList.map((tab: string) => (\n      <Button\n        key={tab}\n        type=\"button\"\n        sx={tab === activeTab ? { ...styles.tab, ...styles.activeTab } : styles.tab}\n        onClick={() => changeTab(tab)}\n      >\n        {tab}\n      </Button>\n    ))}\n  </Box>\n);\n\nexport default TabButtons;\n","import * as React from \"react\";\n\nimport TabButtons from \"./TabButtons\";\n\ninterface TabsProps {\n  children: React.ReactElement[];\n}\n\nconst Tabs: React.FC<TabsProps> = ({ children }) => {\n  const [activeTab, setActiveTab] = React.useState(children[0]?.props.label);\n\n  const changeTab = (tab: string) => {\n    setActiveTab(tab);\n  };\n\n  let content;\n  const tabsList: string[] = [];\n\n  return (\n    <>\n      {React.Children.map(children, (child: React.ReactElement) => {\n        tabsList.push(child.props.label);\n        if (child.props.label === activeTab) {\n          content = child.props.children;\n        }\n      })}\n\n      <TabButtons activeTab={activeTab} tabsList={tabsList} changeTab={changeTab} />\n      {content}\n    </>\n  );\n};\n\nexport default Tabs;\n","import * as React from \"react\";\n\ninterface TabProps {\n  label: string;\n}\n\nconst Tab: React.FC<TabProps> = ({ label, children }) => <>{children}</>;\n\nexport default Tab;\n","import { createSelector } from \"reselect\";\n\nimport { AppState } from \"../rootReducer\";\n\nexport const selectUsers = (state: AppState) => state.profile;\n\nexport const selectProfileData = createSelector(selectUsers, (profile) => profile.data);\nexport const selectProfileLoaded = createSelector(selectUsers, (profile) => profile.isLoaded);\nexport const selectProfileError = createSelector(selectUsers, (profile) => profile.error);\n","import { createSelector } from \"reselect\";\n\nimport { selectProfileData } from \"../profile/selectors\";\nimport { AppState } from \"../rootReducer\";\nimport { UserEntity } from \"../../interfaces/UserEntity\";\nimport { RewardEntity } from \"../../interfaces/RewardEntity\";\nimport { RewardsStore } from \"./reducers\";\n\nexport const selectRewards = (state: AppState) => state.rewards;\n\nconst getTotalSum = (data: RewardEntity[]) =>\n  data.reduce((total: number, el) => total + +el.rewardCount, 0);\n\nexport const selectAllRewards = createSelector(selectRewards, (rewards) => rewards.data);\nexport const selectRewardsLoading = createSelector(selectRewards, (rewards) => rewards.loading);\nexport const selectTotalGiveRewards = createSelector(\n  selectRewards,\n  selectProfileData,\n  (rewards: RewardsStore, profile: UserEntity) => {\n    const giveRewards = rewards.data.filter((el: RewardEntity) => el.userBy.id === profile.id);\n    return getTotalSum(giveRewards);\n  }\n);\n","import { createSelector } from \"reselect\";\n\nimport { AppState } from \"../rootReducer\";\nimport { RewardEntity } from \"../../interfaces/RewardEntity\";\n\nexport const selectMyRewards = (state: AppState) => state.myRewards;\n\nconst getTotalSum = (data: RewardEntity[]) =>\n  data.reduce((total: number, el) => total + +el.rewardCount, 0);\n\nexport const selectMyRewardsData = createSelector(selectMyRewards, (rewards) => rewards.data);\nexport const selectRewardsLoading = createSelector(selectMyRewards, (rewards) => rewards.loading);\nexport const selectTotalMyRewards = createSelector(selectMyRewards, (rewards) =>\n  getTotalSum(rewards.data)\n);\n","import { SIZE } from \"../../constants\";\n\nconst styles = (size: SIZE) => ({\n  avatar: {\n    bgcolor: \"grey.A200\",\n    ...(size === SIZE.s ? { width: 40, height: 40 } : { width: 100, height: 100 }),\n  },\n  icon: {\n    color: \"grey.A400\",\n    ...(size === SIZE.s ? { fontSize: \"1.25rem\" } : { fontSize: \"2.5rem\" }),\n  },\n});\n\nexport default styles;\n","import * as React from \"react\";\n\nimport Avatar, { AvatarProps } from \"@mui/material/Avatar\";\nimport { Person } from \"@mui/icons-material\";\n\nimport { SIZE } from \"../../constants\";\nimport styles from \"./Avatar.styles\";\n\ninterface AvatarComponentProps extends AvatarProps {\n  size?: SIZE;\n}\n\nconst AvatarComponent: React.FC<AvatarComponentProps> = ({ size = SIZE.s, ...props }) => {\n  const { avatar, icon } = styles(size);\n\n  return (\n    <Avatar {...props} sx={{ ...props.sx, ...avatar }}>\n      <Person sx={icon} />\n    </Avatar>\n  );\n};\n\nexport default AvatarComponent;\n","const styles = {\n  rewards: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    maxHeight: \"calc(100vh - 330px)\",\n    overflowY: \"auto\",\n  },\n  rewardItem: { display: \"flex\", flexDirection: \"row\", mt: 5 },\n  rewardDetails: { pl: 2 },\n  rewardTime: { fontSize: \"0.6rem\" },\n  rewardMessage: { fontSize: \"1rem\" },\n} as const;\n\nexport default styles;\n","import * as React from \"react\";\n\nimport Skeleton from \"@mui/material/Skeleton\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nimport Avatar from \"../../components/Avatar\";\nimport rewards from \"../../mockedData/rewards\";\n\nimport styles from \"./ListRewards.styles\";\n\nconst ListRewardsSkeleton: React.FC = () => (\n  <Box>\n    {rewards.map((item) => (\n      <Box key={item.id} sx={styles.rewardItem}>\n        <Skeleton variant=\"circular\" height={40}>\n          <Avatar />\n        </Skeleton>\n        <Box sx={{ ...styles.rewardDetails, width: \"80%\" }}>\n          <Skeleton width=\"60%\">\n            <Typography>.</Typography>\n          </Skeleton>\n          <Skeleton width=\"20%\" />\n          <Skeleton height={40} />\n        </Box>\n      </Box>\n    ))}\n  </Box>\n);\n\nexport default ListRewardsSkeleton;\n","const styles = {\n  panel: { textAlign: \"center\", padding: \"50px 0\" },\n} as const;\n\nexport default styles;\n","import * as React from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nimport styles from \"./PanelEmpty.styles\";\n\ninterface PanelEmptyProps {\n  title?: string;\n}\n\nconst PanelEmpty: React.FC<PanelEmptyProps> = ({ title = \"No data found\", children = \"\" }) => (\n  <Box sx={styles.panel}>\n    <Typography variant=\"h5\" gutterBottom fontSize={20} component=\"h5\">\n      {title}\n    </Typography>\n    <Typography variant=\"h6\" gutterBottom fontSize={14} component=\"h6\">\n      {children}\n    </Typography>\n  </Box>\n);\n\nexport default PanelEmpty;\n","import * as React from \"react\";\nimport dayjs from \"dayjs\";\nimport relativeTimePlugin from \"dayjs/plugin/relativeTime\";\n\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nimport Avatar from \"../../components/Avatar\";\nimport PanelEmpty from \"../../components/PanelEmpty\";\n\nimport { RewardEntity } from \"../../interfaces/RewardEntity\";\n\nimport styles from \"./ListRewards.styles\";\n\ninterface ListRewardsProps {\n  data: RewardEntity[];\n}\n\nconst ListRewardsBox: React.FC<ListRewardsProps> = ({ data }) => {\n  dayjs.extend(relativeTimePlugin);\n\n  return (\n    <>\n      {data.length ? (\n        data.map((reward) => (\n          <Box key={reward.id} sx={styles.rewardItem}>\n            <Avatar />\n            <Box sx={styles.rewardDetails}>\n              <Typography gutterBottom variant=\"caption\">\n                {reward.user?.name} rewarded by {reward.userBy?.name}\n              </Typography>\n              <Typography\n                display=\"block\"\n                variant=\"caption\"\n                color=\"text.secondary\"\n                sx={styles.rewardTime}\n              >\n                {dayjs.unix(reward.time).fromNow()}\n              </Typography>\n              <Typography variant=\"caption\" color=\"text.secondary\" sx={styles.rewardMessage}>\n                {reward.message}\n              </Typography>\n            </Box>\n          </Box>\n        ))\n      ) : (\n        <PanelEmpty>You can add new reward.</PanelEmpty>\n      )}\n    </>\n  );\n};\n\nexport default ListRewardsBox;\n","import * as React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Grid from \"@mui/material/Grid\";\n\nimport ListRewardsSkeleton from \"./ListRewardsSkeleton\";\nimport ListRewardsBox from \"./ListRewardsBox\";\n\nimport { RewardEntity } from \"../../interfaces/RewardEntity\";\n\nimport { selectRewardsLoading } from \"../../store/rewards/selectors\";\n\nimport styles from \"./ListRewards.styles\";\n\ninterface ListRewardsProps {\n  data: RewardEntity[];\n}\n\nconst ListRewards: React.FC<ListRewardsProps> = ({ data }) => {\n  const isLoading = useSelector(selectRewardsLoading);\n\n  return (\n    <Grid container wrap=\"nowrap\" sx={styles.rewards}>\n      {isLoading ? <ListRewardsSkeleton /> : <ListRewardsBox data={data} />}\n    </Grid>\n  );\n};\n\nexport default ListRewards;\n","const styles = {\n  feed: {\n    mt: 4,\n    position: \"relative\",\n  },\n  addBtn: {\n    minWidth: \"50px\",\n    height: \"50px\",\n    position: \"absolute\",\n    top: \"18px\",\n    right: \"20px\",\n    border: \"1px solid\",\n    borderRadius: \"50%\",\n    padding: 0,\n    bgcolor: \"primary.contrastText\",\n\n    \"&:hover\": {\n      bgcolor: \"primary.contrastText\",\n      boxShadow: 2,\n    },\n  },\n} as const;\n\nexport default styles;\n","const styles = {\n  modal: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 400,\n    bgcolor: \"background.paper\",\n    boxShadow: 24,\n    p: 4,\n  },\n} as const;\n\nexport default styles;\n","import * as React from \"react\";\n\nimport Modal from \"@mui/material/Modal\";\nimport Box from \"@mui/material/Box\";\n\nimport styles from \"./Modal.styles\";\n\ninterface ModalProps {\n  isOpen: boolean;\n  children: React.ReactElement;\n  onClose(): void;\n}\n\nconst ModalComponent: React.FC<ModalProps> = ({ children, isOpen, onClose }) => (\n  <Modal open={isOpen} onClose={onClose}>\n    <Box sx={styles.modal}>{children}</Box>\n  </Modal>\n);\n\nexport default ModalComponent;\n","import * as React from \"react\";\nimport { FormikProps, FieldInputProps } from \"formik\";\n\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField, { TextFieldProps } from \"@mui/material/TextField\";\n\nexport interface FormFieldProps {\n  field: FieldInputProps<string>;\n  form: FormikProps<any>;\n}\n\ntype FormikAutocompleteProps<T> = FormFieldProps & {\n  options: T[];\n  textFieldProps: TextFieldProps;\n};\n\nfunction FormikAutocomplete<T extends { name: string }>({\n  options,\n  form,\n  field,\n  textFieldProps,\n}: FormikAutocompleteProps<T>): JSX.Element {\n  const { name } = field;\n  const { setTouched, setFieldValue } = form;\n\n  return (\n    <Autocomplete\n      {...field}\n      options={options}\n      fullWidth\n      getOptionLabel={(option) => option.name}\n      onChange={(_, value) => setFieldValue(name, value)}\n      onBlur={() => setTouched({ [name]: true })}\n      renderInput={(inputProps) => (\n        <TextField\n          {...inputProps}\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{ shrink: true }}\n          InputProps={{ ...inputProps.InputProps, placeholder: textFieldProps.placeholder }}\n          {...textFieldProps}\n        />\n      )}\n    />\n  );\n}\n\nexport default FormikAutocomplete;\n","import * as Yup from \"yup\";\n\nconst MAX_LENGTH = 10;\nconst MAX_ERROR_MESSAGE = `Should be less that ${MAX_LENGTH} symbols`;\n\nexport const RewardSchema = Yup.object().shape({\n  user: Yup.object().shape({ name: Yup.string() }).required(\"User is required\").nullable(),\n  rewardCount: Yup.string().max(MAX_LENGTH, MAX_ERROR_MESSAGE).required(\"Reward is required\"),\n});\n","import { createSelector } from \"reselect\";\n\nimport { AppState } from \"../rootReducer\";\n\nexport const selectUsers = (state: AppState) => state.users;\n\nexport const selectUsersData = createSelector(selectUsers, (users) => users.data);\nexport const selectUsersLoading = createSelector(selectUsers, (users) => users.loading);\nexport const selectUsersError = createSelector(selectUsers, (users) => users.error);\n","import dayjs from \"dayjs\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { RewardEntity } from \"../../interfaces/RewardEntity\";\nimport { selectProfileData } from \"../../store/profile/selectors\";\nimport { createReward } from \"../../store/rewards/reducers\";\nimport { createMyReward } from \"../../store/myRewards/reducers\";\n\nconst useRewardModal = () => {\n  const dispatch = useDispatch();\n\n  const profile = useSelector(selectProfileData);\n\n  const onSubmit = (values: RewardEntity) => {\n    dispatch(createReward(values));\n\n    if (profile.id === values.user.id) {\n      dispatch(createMyReward(values));\n    }\n  };\n\n  const initialReward: RewardEntity = {\n    id: Date.now(),\n    user: null,\n    rewardCount: \"\",\n    rewardCurrency: \"$\",\n    message: \"\",\n    time: dayjs().unix(),\n    userBy: profile,\n  };\n\n  return {\n    initialReward,\n    onSubmit,\n  };\n};\n\nexport default useRewardModal;\n","const styles = {\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  btn: {\n    margin: \"20px 0 0\",\n    bgcolor: \"palette.primary.main\",\n    textTransform: \"capitalize\",\n    fontSize: \"1.1rem\",\n    width: \"100px\",\n  },\n} as const;\n\nexport default styles;\n","import * as React from \"react\";\nimport { Formik, Field, FormikProps } from \"formik\";\nimport { useSelector } from \"react-redux\";\n\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\n\nimport Modal from \"../../components/Modal\";\nimport Autocomplete, { FormFieldProps } from \"../../components/Autocomplete\";\n\nimport { RewardSchema } from \"./validation\";\nimport { selectUsersData } from \"../../store/users/selectors\";\nimport { RewardEntity } from \"../../interfaces/RewardEntity\";\nimport useRewardModal from \"./useRewardModal\";\n\nimport styles from \"./RewardModal.styles\";\n\ninterface RewardModalProps {\n  open: boolean;\n  onClose(): void;\n}\n\nconst RewardModal: React.FC<RewardModalProps> = ({ open, onClose }) => {\n  const users = useSelector(selectUsersData);\n\n  const { initialReward, onSubmit } = useRewardModal();\n\n  const handleFormSubmit = (values: RewardEntity) => {\n    onSubmit(values);\n    onClose();\n  };\n\n  return (\n    <Modal isOpen={open} onClose={onClose}>\n      <Formik\n        initialValues={initialReward}\n        validationSchema={RewardSchema}\n        onSubmit={handleFormSubmit}\n      >\n        {({ values, touched, errors, handleChange, handleSubmit }: FormikProps<RewardEntity>) => (\n          <form onSubmit={handleSubmit}>\n            <Box sx={styles.form}>\n              <Field\n                name=\"user\"\n                component={(props: FormFieldProps) => (\n                  <Autocomplete\n                    {...props}\n                    options={users}\n                    textFieldProps={{\n                      label: \"To\",\n                      placeholder: \"Select User\",\n                      helperText: touched.user && errors.user,\n                      error: Boolean(touched.user && errors.user),\n                    }}\n                  />\n                )}\n              />\n              <TextField\n                name=\"rewardCount\"\n                type=\"number\"\n                label=\"Reward\"\n                InputProps={{ placeholder: \"Enter rewards\" }}\n                fullWidth\n                margin=\"normal\"\n                value={values.rewardCount}\n                InputLabelProps={{ shrink: true }}\n                helperText={touched.rewardCount && errors.rewardCount}\n                error={Boolean(touched.rewardCount && errors.rewardCount)}\n                onChange={handleChange}\n              />\n              <TextField\n                name=\"message\"\n                multiline\n                rows={4}\n                label=\"Why?\"\n                fullWidth\n                margin=\"normal\"\n                value={values.message}\n                InputLabelProps={{ shrink: true }}\n                onChange={handleChange}\n              />\n              <Button color=\"primary\" type=\"submit\" variant=\"contained\" sx={styles.btn}>\n                Reward\n              </Button>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </Modal>\n  );\n};\n\nexport default RewardModal;\n","import * as React from \"react\";\n\nconst useToggleModal = () => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpenModal = () => setOpen(true);\n  const handleCloseModal = () => setOpen(false);\n\n  return { open, handleOpenModal, handleCloseModal };\n};\n\nexport default useToggleModal;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport { Add } from \"@mui/icons-material\";\n\nimport Tabs from \"../../components/TabComponent/Tabs\";\nimport Tab from \"../../components/TabComponent/Tab\";\n\nimport { fetchRewards } from \"../../store/rewards/actions\";\nimport { fetchRewardsByUser } from \"../../store/myRewards/actions\";\nimport { selectAllRewards } from \"../../store/rewards/selectors\";\nimport { selectMyRewardsData } from \"../../store/myRewards/selectors\";\nimport { selectProfileData } from \"../../store/profile/selectors\";\n\nimport ListRewards from \"../ListRewards\";\n\nimport styles from \"./Feed.styles\";\nimport RewardModal from \"../RewardModal\";\nimport useToggleModal from \"../../hooks/useToggleModal\";\n\nconst Feed: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const profile = useSelector(selectProfileData);\n  const allRewards = useSelector(selectAllRewards);\n  const myRewards = useSelector(selectMyRewardsData);\n\n  const { open, handleOpenModal, handleCloseModal } = useToggleModal();\n\n  useEffect(() => {\n    dispatch(fetchRewards());\n    dispatch(fetchRewardsByUser(profile.id));\n  }, []);\n\n  return (\n    <Box sx={styles.feed}>\n      <Tabs>\n        <Tab label=\"Feed\">\n          <ListRewards data={allRewards} />\n        </Tab>\n        <Tab label=\"My Rewards\">\n          <ListRewards data={myRewards} />\n        </Tab>\n      </Tabs>\n      <Button sx={styles.addBtn} onClick={handleOpenModal}>\n        <Add />\n      </Button>\n      <RewardModal open={open} onClose={handleCloseModal} />\n    </Box>\n  );\n};\n\nexport default Feed;\n","const styles = {\n  count: { fontSize: \"1.25rem\", fontWeight: 500 },\n};\n\nexport default styles;\n","import * as React from \"react\";\n\nimport Typography from \"@mui/material/Typography\";\n\nimport { CURRENCY } from \"../../constants\";\n\nimport styles from \"./Money.styles\";\n\ninterface MoneyProps {\n  value: number;\n  currency?: CURRENCY;\n}\n\nconst Money: React.FC<MoneyProps> = ({ value, currency = CURRENCY.dollar }) => {\n  return (\n    <>\n      <Typography sx={styles.count}>\n        {value}\n        {currency}\n      </Typography>\n    </>\n  );\n};\n\nexport default Money;\n","const styles = {\n  avatar: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    mr: 8,\n    \"@media screen and (max-width: 460px)\": {\n      mr: 2,\n    },\n  },\n  name: { fontSize: \"1rem\", mt: 1, minWidth: \"115px\", minHeight: \"24px\" },\n} as const;\n\nexport default styles;\n","import * as React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Box from \"@mui/material/Box\";\nimport Skeleton from \"@mui/material/Skeleton\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { SIZE } from \"../../constants\";\nimport Avatar from \"../../components/Avatar\";\n\nimport { selectProfileData } from \"../../store/profile/selectors\";\n\nimport styles from \"./Profile.styles\";\n\nconst Profile = () => {\n  const profile = useSelector(selectProfileData);\n\n  return (\n    <Box sx={styles.avatar}>\n      <Avatar size={SIZE.m} />\n      {profile ? (\n        <Typography sx={styles.name}>{profile.name}</Typography>\n      ) : (\n        <Skeleton sx={styles.name} />\n      )}\n    </Box>\n  );\n};\n\nexport default Profile;\n","const styles = {\n  header: { display: \"flex\", alignItems: \"center\" },\n  details: { display: \"flex\", flexDirection: \"row\" },\n  block: {\n    mr: 10,\n    \"@media screen and (max-width: 460px)\": {\n      mr: 2,\n    },\n  },\n} as const;\n\nexport default styles;\n","import * as React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nimport Money from \"../../components/Money\";\nimport Profile from \"../Profile\";\n\nimport { selectTotalGiveRewards } from \"../../store/rewards/selectors\";\nimport { selectTotalMyRewards } from \"../../store/myRewards/selectors\";\n\nimport styles from \"./Header.styles\";\n\nconst Header = () => {\n  const myRewards = useSelector(selectTotalMyRewards);\n  const giveRewards = useSelector(selectTotalGiveRewards);\n\n  return (\n    <Grid container sx={styles.header}>\n      <Profile />\n      <Box sx={styles.details}>\n        <Box sx={styles.block}>\n          <Typography gutterBottom>My Rewards</Typography>\n          <Money value={myRewards} />\n        </Box>\n        <Box>\n          <Typography gutterBottom>Give</Typography>\n          <Money value={giveRewards} />\n        </Box>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default Header;\n","const styles = {\n  box: {\n    display: \"flex\",\n    margin: \"auto\",\n    width: \"100vw\",\n    height: \"100vh\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n};\n\nexport default styles;\n","import * as React from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport styles from \"./Preloader.styles\";\n\nconst Preloader = () => (\n  <Box sx={styles.box}>\n    <CircularProgress />\n  </Box>\n);\n\nexport default Preloader;\n","import * as React from \"react\";\n\nimport Preloader from \"../components/Preloader\";\n\ninterface WithLoadingProps {\n  loading: boolean;\n}\n\nconst withLoading = <P extends object>(Component: React.ComponentType<P>) =>\n  class WithLoading extends React.Component<P & WithLoadingProps> {\n    render() {\n      const { loading, ...props } = this.props;\n      return loading ? <Preloader /> : <Component {...(props as P)} />;\n    }\n  };\n\nexport default withLoading;\n","const styles = {\n  layout: {\n    maxWidth: \"860px\",\n    margin: \"100px auto 0\",\n\n    \"@media screen and (max-width: 460px)\": {\n      margin: \"40px auto 0\",\n    },\n  },\n};\n\nexport default styles;\n","import * as React from \"react\";\n\nimport Box from \"@mui/material/Box\";\n\nimport withLoading from \"../../HOCs/withLoading\";\n\nimport styles from \"./Layout.styles\";\n\nconst Layout: React.FC = ({ children }) => <Box sx={styles.layout}>{children}</Box>;\n\nexport default withLoading(Layout);\n","import * as React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Layout from \"../Layout\";\n\nimport { fetchUser } from \"../../store/users/actions\";\nimport { selectProfileLoaded } from \"../../store/profile/selectors\";\n\nconst Wrapper: React.FC = ({ children }) => {\n  const dispatch = useDispatch();\n\n  const isLoaded = useSelector(selectProfileLoaded);\n\n  React.useEffect(() => {\n    dispatch(fetchUser());\n  }, [dispatch]);\n\n  return <Layout loading={!isLoaded}>{children}</Layout>;\n};\n\nexport default Wrapper;\n","const styles = {\n  wrapper: {\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  icon: { fontSize: \"4rem\", color: \"error.main\" },\n} as const;\n\nexport default styles;\n","import React, { Component, ErrorInfo, ReactNode } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\n\nimport styles from \"./ErrorBoundary.styles\";\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n  };\n\n  public static getDerivedStateFromError(_: Error): State {\n    return { hasError: true };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error(\"Uncaught error:\", error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return (\n        <Box sx={styles.wrapper}>\n          <ErrorIcon sx={styles.icon} />\n          <h1>Sorry.. there was an error</h1>\n        </Box>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import * as React from \"react\";\n\nimport Feed from \"./containers/Feed\";\nimport Header from \"./containers/Header\";\nimport Wrapper from \"./components/Wrapper\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\n\nconst App = () => (\n  <ErrorBoundary>\n    <Wrapper>\n      <Header />\n      <Feed />\n    </Wrapper>\n  </ErrorBoundary>\n);\n\nexport default App;\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { mainTheme } from \"./materialTheme\";\n\nimport store from \"./store\";\n\nimport App from \"./App\";\n\nrender(\n  <Provider store={store}>\n    <ThemeProvider theme={mainTheme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}